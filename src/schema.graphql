### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Mutation {
  createOneTask(data: TaskCreateInput!): Task!
  createOneTodo(data: TodoCreateInput!): Todo!
  deleteOneTask(where: TaskWhereUniqueInput!): Task
  deleteOneTodo(where: TodoWhereUniqueInput!): Todo
  dummyMutation: String
  updateOneTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateOneTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum OperationsTypeEnum {
  DELETE
  INSERT
  UPDATE
}

type Query {
  dummyQuery: String
  task(where: TaskWhereUniqueInput!): Task
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int, where: TaskWhereInput): [Task!]!
  todo(where: TodoWhereUniqueInput!): Todo
  todos(after: TodoWhereUniqueInput, before: TodoWhereUniqueInput, first: Int, last: Int, where: TodoWhereInput): [Todo!]!
}

enum QueryMode {
  default
  insensitive
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  taskSubscription: TaskSubscriptionType
  todoSubscription: TodoSubscriptionType
}

type Task {
  createdAt: DateTime!
  description: String
  id: Int!
  name: String!
  todo: Todo!
  todoId: Int!
  updatedAt: DateTime!
}

input TaskCreateInput {
  createdAt: DateTime
  description: String
  name: String!
  todo: TodoCreateNestedOneWithoutTasksInput!
  updatedAt: DateTime
}

input TaskCreateManyTodoInput {
  createdAt: DateTime
  description: String
  id: Int
  name: String!
  updatedAt: DateTime
}

input TaskCreateManyTodoInputEnvelope {
  data: [TaskCreateManyTodoInput!]
  skipDuplicates: Boolean
}

input TaskCreateNestedManyWithoutTodoInput {
  connect: [TaskWhereUniqueInput!]
  connectOrCreate: [TaskCreateOrConnectWithoutTodoInput!]
  create: [TaskCreateWithoutTodoInput!]
  createMany: TaskCreateManyTodoInputEnvelope
}

input TaskCreateOrConnectWithoutTodoInput {
  create: TaskCreateWithoutTodoInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateWithoutTodoInput {
  createdAt: DateTime
  description: String
  name: String!
  updatedAt: DateTime
}

input TaskListRelationFilter {
  every: TaskWhereInput
  none: TaskWhereInput
  some: TaskWhereInput
}

input TaskScalarWhereInput {
  AND: [TaskScalarWhereInput!]
  NOT: [TaskScalarWhereInput!]
  OR: [TaskScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  name: StringFilter
  todoId: IntFilter
  updatedAt: DateTimeFilter
}

type TaskSubscriptionType {
  new: Task
  old: Task
  operation: OperationsTypeEnum
  table_name: String
  when: WhenTypeEnum
}

input TaskUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  todo: TodoUpdateOneRequiredWithoutTasksInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateManyWithWhereWithoutTodoInput {
  data: TaskUpdateManyMutationInput!
  where: TaskScalarWhereInput!
}

input TaskUpdateManyWithoutTodoInput {
  connect: [TaskWhereUniqueInput!]
  connectOrCreate: [TaskCreateOrConnectWithoutTodoInput!]
  create: [TaskCreateWithoutTodoInput!]
  createMany: TaskCreateManyTodoInputEnvelope
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutTodoInput!]
  updateMany: [TaskUpdateManyWithWhereWithoutTodoInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutTodoInput!]
}

input TaskUpdateWithWhereUniqueWithoutTodoInput {
  data: TaskUpdateWithoutTodoInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithoutTodoInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpsertWithWhereUniqueWithoutTodoInput {
  create: TaskCreateWithoutTodoInput!
  update: TaskUpdateWithoutTodoInput!
  where: TaskWhereUniqueInput!
}

input TaskWhereInput {
  AND: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  name: StringFilter
  todo: TodoWhereInput
  todoId: IntFilter
  updatedAt: DateTimeFilter
}

input TaskWhereUniqueInput {
  id: Int
}

type Todo {
  createdAt: DateTime!
  description: String
  id: Int!
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  title: String!
  updatedAt: DateTime!
}

input TodoCreateInput {
  createdAt: DateTime
  description: String
  tasks: TaskCreateNestedManyWithoutTodoInput
  title: String!
  updatedAt: DateTime
}

input TodoCreateNestedOneWithoutTasksInput {
  connect: TodoWhereUniqueInput
  connectOrCreate: TodoCreateOrConnectWithoutTasksInput
  create: TodoCreateWithoutTasksInput
}

input TodoCreateOrConnectWithoutTasksInput {
  create: TodoCreateWithoutTasksInput!
  where: TodoWhereUniqueInput!
}

input TodoCreateWithoutTasksInput {
  createdAt: DateTime
  description: String
  title: String!
  updatedAt: DateTime
}

type TodoSubscriptionType {
  new: Todo
  old: Todo
  operation: OperationsTypeEnum
  table_name: String
  when: WhenTypeEnum
}

input TodoUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutTodoInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TodoUpdateOneRequiredWithoutTasksInput {
  connect: TodoWhereUniqueInput
  connectOrCreate: TodoCreateOrConnectWithoutTasksInput
  create: TodoCreateWithoutTasksInput
  update: TodoUpdateWithoutTasksInput
  upsert: TodoUpsertWithoutTasksInput
}

input TodoUpdateWithoutTasksInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TodoUpsertWithoutTasksInput {
  create: TodoCreateWithoutTasksInput!
  update: TodoUpdateWithoutTasksInput!
}

input TodoWhereInput {
  AND: [TodoWhereInput!]
  NOT: [TodoWhereInput!]
  OR: [TodoWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  tasks: TaskListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input TodoWhereUniqueInput {
  id: Int
}

enum WhenTypeEnum {
  AFTER
  BEFORE
}
